package repository

import (
	"context"
	"time"
)

type OverrideStatus string

const (
	OverrideStatusPending  OverrideStatus = "pending"
	OverrideStatusApproved OverrideStatus = "approved"
	OverrideStatusRejected OverrideStatus = "rejected"
)

type Override struct {
	OverrideID  string         `dynamodbav:"override_id" json:"override_id"`
	RequestedBy string         `dynamodbav:"requested_by" json:"requested_by"`
	StartDate   time.Time      `dynamodbav:"start_date" json:"start_date"`
	EndDate     time.Time      `dynamodbav:"end_date" json:"end_date"`
	Status      OverrideStatus `dynamodbav:"status" json:"status"`
	ApprovedBy  string         `dynamodbav:"approved_by,omitempty" json:"approved_by,omitempty"`
	CreatedAt   time.Time      `dynamodbav:"created_at" json:"created_at"`
	UpdatedAt   time.Time      `dynamodbav:"updated_at" json:"updated_at"`
}

type OverrideRepository interface {
	ListOverrides(ctx context.Context) ([]Override, error)
	GetOverride(ctx context.Context, id string) (*Override, error)
	CreateOverride(ctx context.Context, requestedBy string, startDate, endDate time.Time) (*Override, error)
	ApproveOverride(ctx context.Context, id string, approvedBy string) error
	RejectOverride(ctx context.Context, id string, rejectedBy string) error
}
