package main

import (
	"github.com/rs/zerolog/log"
	"github.com/yourusername/myproject/internal/config"
	"github.com/yourusername/myproject/internal/handler"
	"github.com/yourusername/myproject/internal/repository"
	"github.com/yourusername/myproject/internal/server"
	"github.com/yourusername/myproject/pkg/logger"
)

func main() {
	// Load configuration
	cfg, err := config.LoadConfig()
	if err != nil {
		log.Fatal().Err(err).Msg("Failed to load configuration")
	}

	// Setup logger
	logger.Setup(cfg.LogLevel)
	log.Info().Msg("Starting application")

	// Create repository
	repo, err := repository.NewDynamoDBRepository(
		cfg.Database.DynamoDBEndpoint,
		cfg.Database.DynamoDBRegion,
		cfg.Database.DynamoDBTableName,
	)
	if err != nil {
		log.Fatal().Err(err).Msg("Failed to create repository")
	}

	// Create handler
	h := handler.NewServer(repo)

	// Create and start server
	srv := server.New(cfg, h)
	if err := srv.Start(); err != nil {
		log.Fatal().Err(err).Msg("Failed to start server")
	}
}
